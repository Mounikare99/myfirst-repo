LINUX CLASS-1
 LINUX:
 Linux is an free and Open-source operating system with high security. Linux is multi user 
based OS.
 OS: Operating System 
An Operating System (OS) is a software that acts as an interface between computer hardware 
components and the user.
 Every computer system must have at least one operating system to run other programs. 
Applications like Browsers, MS O ce, Notepad Games, etc., need some environment to run 
and perform its tasks.
 TYPES OF OS:
 Key Features of Linux:
 Linux follows the open-source model.
 Linux has multiuser and multitasking capabilities.
 Security features.
 Linux is used for servers, embedded systems, supercomputers, etc
 LINUX OS DISTRIBUTIONS:
 Many of the users taken the linux OS and modified according to their requirements and 
released into the market with di erent names called Linux distribution.
 RedHat
 Ubuntu
 Debian
 Centos
 Fedora
 Opensuse
 Kali Linux
 Amazon Linux
Rocky Linux 
HISTORY:
 On Sep 17th 1991, Linus Torvalds a student at the university of Helsinki, Finland, He released 
the first version of the Linux kernel, known as Linux 0.01, as open-source software.
 The Linux kernel is written in C language.
 He wrote this program specially for his own PC 
Firstly he wanted to name it as 'Freax' but later it became 'Linux'. 
Today, supercomputers, smart phones, desktop, web servers, tablet, laptops and home 
appliances like washing machines, DVD players, routers, modems, cars, refrigerators, etc 
use Linux OS.
 KERNEL:
 It is the core or the heart of the operating system. It's the central part that manages and 
facilitates communication between the computer's hardware and software.
 SHELL:
 A shell that allows users to interact with the operating system. There are two types of shells.
 Command Line Interface (CLI): Executes the command provided by user given in the form 
command and display the output in terminal.
 Executes the process provided by user in graphical way and output is displayed in the 
graphical window.
COMMAND:
 It is an instruction/request given to the operating system by a user.
 It tells computer to perform a particular task.
 TERMINAL:
 It is a text-based interface that allows you to interact with the operating system by typing 
commands.
 It's a way for you to communicate with the linux machines.
 LETS DIVE INTO PRACTICAL SESSION:
 By default we are in ec2-user, but if we want to perform any action we should be in root user
 because, root is the ultimate king of linux, root has full permissions, so that we can run any 
command anywhere.
 To login as root user : sudo -i
 Here sudo : super user do 
to logout from root user and go back to ec2-user : exit 
In Linux we have di erent types of commands
 SYSTEM COMMANDS
 HARDWARE COMMANDS
 FILE COMMANDS
 PERMISSION COMMANDS
 USER COMMANDS
 SEARCH COMMANDS
 NETWORKING COMMANDS
 SYSTEM COMMANDS: Used to get system information
uname : used to get type of OS
 uname -r : used to get kernel version of our OS
 uname -a : used to get full info about OS
 clear: this command is used to clear the clear (or) you can use ctrl + l as a short cut
 uptime : used to get since how long our system is in running state
 uptime -p : this will give only time
 hostname: used to get private dns name of our system
 hostname -i : used to get private ip of our system
 hostnamectl set-hostname “swiggy” : used to change hostname
 ip addr : used to get private IP
 ip route : used to get private IP
 ifconfig : used to get private IP
 date : to get todays date 
timedatectl : used to get timezones 
timedatectl set-timezone Asia/Kolkata : used to change Timezone to IST
 who : used to see how many users have been loggin into your system
 whoami : used to see the current user.
 ps : used to see the running processors in system
kill -9 PID : used to kill a processor
 HARDWARE COMMANDS:
 date Shows system date and timestamp
 date +”%d” Prints day of the month (01-31)
 date +”%m” Prints the month of the year 01-12
 date +”%y” Prints only the last two digits of Year
 date +”%H” Prints the hour 00-23
 date +”%M” Prints the Minute of the hour 00-59
 date +”%S” Prints the current seconds count in the 
minute (00-60)
 date +"%D" Prints Date in MM/DD/YY
 date +”%F” Prints only the Full date as YYYY-MM-DD
 date +”%A” Prints the Day of the Week Saturday
Sunday
 date +”%B” Prints the month between January
December
 who Prints information about default user in 
our server
lscpu Displays information about the CPU 
architecture
 lsblk -a Lists the information about all the block 
devices attached to the system
 free Displays system memory(RAM) details in 
KB
 free -m Displays system memory(RAM) details in 
MB
 df -h Report file system disk space usage in human 
readable languages
LINUX CLASS-2
 FILE COMMANDS:
 touch filename : used to create a file
 touch aws azure gcp : used to create multiple files
 touch linux{1..5} : this command will create 5 files (linux1,inux2, linux3 .... linux5)
 rm filename : remove file with permissions (rm means remove)
 rm -f filename : remove file without permissions (-f means forcefully)
 rm -f aws azure gpc : remove multiple files without permissions
 rm -f linux{1..5} : this command will remove linux files from 1 to 5 without permissions
 rm -f * : used to delete all files
 rm -f *.txt : used to delete all files with .txt extension
 rm -f a* : this command will delete all files which are stared with “a” letter
 FOLDER COMMANDS:
 mkdir foldername : used to create a folder
 mkdir git maven jenkins : used to create multiple folders
 mkdir docker{1..5} : used to create 5 folders at the same time
 rmdir foldername : used to remove empty folder
 rmdir git maven jenkins : will remove multiple empty folders
 rmdir docker{1..5} : used to remove 5 docker empty folders
 rmdir * : used to remove all empty folder
 rm -rf * : used to remove all files & folders and also it is used to remove non empty folders
 LIST THE FILES:
 ll : used to get list of files
 ls : used to get list of files
 ll vs ls
ll : will give the full info about files/folders
 ls : it will give only file/folder names
 CHANGE DIRECTORY:
 cd foldername : used to change directory
 cd  : used to go to root directory
 cd - : used to go to previous folder
 cd ../ : used to go to one folder back
 cd ../../ : used to go to 2 folders back
 DIRECTORY COMMANDS:
 mkdir folder1/folder2 : this will creates folder2 inside folder1
 ll folder1 : used to get list of files & folder which are present in folder1 
touch folder1/aws.txt : used to create file inside a folder 
mkdir -p aws/azure/gcp/ccit : used to create parenting folder (folder inside the folder) 
automatically 
COPY COMMAND: used to copy 
SYNTAX: cp source destination 
command: cp file1 file2 
By the above command, the data from file1 copies into file2. But the problem is it will 
overwrite the data which are present in file2. 
To overcome this issue we will use cat command. 
cat source_file (file1)>> destination_file (file2) 
MOVE COMMAND:
 SYNTAX: mv source destination 
COMMAND : mv file1 file2
This is also called renaming a file 
LINUX CLASS 3
 ll : used to see the list of files in order (A-Z)
 ll -t : used to see the list of the files based on modification/creation time
 ll -r : used to see the files in reverse order (Z to A)
 ll -a : used to see all files including hidden
 CAT COMMAND: 
cat command is used to read the data from a file, it is also used to append the data in a file
 cat filename: used to read the data from a file
 cat>filename : used to overwrite the data
 cat>>filename: used to append the data
 NOTE: Cat command is used to append the data, but here the problem is, it is not possible to 
modify the data. To avoid this issue we can use editor in linux. 
There are 2 types of editors in linux
 1. Vim editor
 2. Nano editor 
VIM EDITOR: It is used to edit the files in linux machines, It has 3 modes
 1. Command mode
 2. Insert mode
 3. Save & quit mode
 To open any file in vim editor : vim filename (or) vi filename
1. COMMAND MODE: this is the default mode in vim editor, It is used to perform some 
actions like used to copy the data, delete the data and we can make undo and redo the 
changes as well.
 gg : used to go to 1st line of the file
 G : used to go to last line of the file
 M : used to go to middle of the file
 4gg : used to go to 4th line of the file
 17gg : used to go to 17th line of the file
 :23 : used to go to 23rd line of the file
 :set number : used to set numbers of the file
 yy : used to copy the line 
4yy : used to copy 4 lines from our cursor 
p : paste the copied content
 10p : paste the copied content 10 times
 dd : used to delete the line
 5dd : used to delete 5 lines from the cursor
 u : used to undo the changes
 crtl + r : used to redo the changes.
 /word : used to search for a word in a file
 ?word : used to search for a word in a file
 :%s/old/new/ : used to replace 
2. INSERT MODE: This mode is used to insert the data or make any modifications in a file. 
To go to insert mode : i 
To go back to command mode : esc 
To go to the ending of the line : A
 To go to starting of this line : I
 To create a new line above the cursor : O
 To create a new line below the cursor : o
 DIFFERENCE B/W COMMAND MODE KEYS & INSERT MODE.
 If we perform command mode keys we will be in command mode only
 If we perform insert mode keys we will go to insert mode. 
3. SAVE & QUIT MODE: This is used to save the data and quit from vim editor 
To save the data - :w
 To quit from vim editor - :q
 To quit forcefully - :q!
 To save & quit at a time - :wq
 To save & quit forcefully at a time - :wq!
LINUX CLASS-5
 CAT COMMAND:
 cat filename : used to read the data in a file
 cat -n filename : prints the data with line numbers
 head filename: used to print top 10 lines
 tail filename: used to print last 10 lines
 head -n 15 filename : used to print first 15 lines of a file
 tail -n 20 filename : used to print last 20 lines of a file
 sed -n ‘15,30p’ filename : used to print 15-30 lines of a file
 LIST COMMAND:
 ll : used to see the list of files in order (A-Z)
 ll -t : used to see the list of the files based on modification/creation time
 ll -r : used to see the files in reverse order (Z to A)
 ll -a : used to see all files including hidden
 USER COMMANDS:
 cat /etc/passwd : used to get list of users
 useradd username : used to add user 
NOTE: whenever we added any user, then folder will gets created in /home directory
 whenever we added any user, then group will also created
 userdel username : used to delete user 
NOTE: whenever we delete any user, then folder will not gets deleted in /home directory
 whenever we delete any user, then group will gets deleted 
userdel -r username : used to remove the user along with folder
 useradd -M username : used to create a user without folder
 su - username : used to switch to another user
 passwd username : used to set a password to user
 GROUP COMMAND: 
cat /etc/group : used to get list of groups
 groupadd group_name : used to add a group
 groupdel groupname : used to delete group
 usermod -a -G group user : used to add a user in a group
 GREP (Global Regular Expression Print): It is used to search for a word in a file
 SYNTAX: grep “word” filename
 grep “word” filename : used to search for a word in a file
 grep -n “word” filename : it prints the data along with line numbers
 grep -c “word” filename : it prints no of occurances of a word
 grep -i “word” filename : used to search for a case-sensitive
LINUX CLASS-6
 OWNER COMMANDS:
 to change the user of a file : chown user filename
 to change group of a file : chgrp group file
 to change user and group at a time : chown user:group filename
 to change user & group to multiple files : chown user:group file1 file2 
f
 ile3
 to change owners to folder only : chown user:group folder
 to change owners to files only in folder : chown user:group folder/*
 to change owners to file & folder at a time : chown -R user:group folder
 PERMISSION COMMANDS:
 to change the permissions of a file : chmod 754 filename
 to change permissions to multiple files : chmod 777 file1 file2 file3
 to change permissions to folder only : chmod 654 folder
 to change permissions to files only in folder : chmod 567 folder/*
 to change permissions to file & folder at a time : chmod -R 123 folder
 SEARCH COMMANDS: It is used to search for a file, To search for a file we have 2 
commands
 1. find command
 2. locate command
 FIND COMMAND: 
SYNTAX: find path -name file_name
 f
 ind . -name file : used to find a file in current directory
 f
 ind /proc/ -name filename : used to find a file in proc directory
f
 ind . -type d -name folder : used to find a folder in current director
 f
 ind . -type f -name <file1.txt>  : used to find a file in current directory
 f
 ind . -type f -perm 777 : Finds all the files whose permissions are 777 in 
the current directory
 f
 ind . -type f ! -perm 777 : Finds all the files whose permissions are NOT 
777 in the current directory 
f
 ind / -user <username> : Finds all the files specific user owned in / 
directory
 f
 ind / -group groupname :  Finds all the files specific group owned in / 
directory
 LOCATE COMMAND: 
SYNTAX: locate filename
 NOTE: If you are using locate command, we have to update the db of linux before performing 
locate command.
 f
 ind vs locate : find commands will search as per the path that we mentioned in command, 
but locate command will search for a file on entire database.
 TODAY’S TASK:
 Change the permissions of a files which are present in folder
 Change the permissions of a folder along with files which are present inside of a folder 
SOME TIPS:
 To delete a full command: ctrl + u
 To cut the command : ctrl + k
 To go to the starting of the command : ctrl + a
 To go to the end of the command : ctrl + e
For reverse search : crtl + r
 To see the history of commands: history 